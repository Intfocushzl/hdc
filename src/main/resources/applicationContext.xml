<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:p="http://www.springframework.org/schema/p"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	 http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	">
	
	
	<!-- 开启注解功能 -->
	<context:annotation-config/>
	<!-- 自动实例化指定包以及子包下的所有bean -->
	<context:component-scan base-package="org.wang*"/>
	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:hikaricp.properties" />
	<!-- 
	 <aop:aspectj-autoproxy/>  -->
	 
	<bean id="dataSource"
          class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="driverClassName" value="${hikaricp.jdbc.driverClassName}"/>
                <property name="jdbcUrl" value="${hikaricp.url}"/>
                <property name="username" value="${hikaricp.username}"/>
                <property name="password" value="${hikaricp.password}"/>
                <property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>
                <property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
                <property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
                <property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
                <property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
                <property name="minimumIdle" value="${hikaricp.minimumIdle}"/>
            </bean>
        </constructor-arg>
    </bean>
    
    
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		  <!-- 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效-->
		  <!--  <property name="configLocation" value="classpath:mybatis-config.xml" /> -->
		  <!--  <property name="mapperLocations" value="classpath:com/yonghui/portal/daomapper/*.xml"></property> -->
		   <property name="mapperLocations" value="classpath:org/wang/tools/daoMapper/**/*.xml"></property>
	</bean>
	
	
	<!-- 获取sql session -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype"> 
        <constructor-arg index="0" ref="sqlSessionFactory" ></constructor-arg>
    </bean>  

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="org.wang.tools.dao" />
	</bean>
	 
	 <!-- 可通过注解控制事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
 	
		
</beans>