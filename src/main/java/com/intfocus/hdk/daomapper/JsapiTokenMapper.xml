<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intfocus.hdk.dao.JsapiTokenMapper" >
  <resultMap id="BaseResultMap" type="com.intfocus.hdk.vo.JsapiToken" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="jsapi_token_content" property="jsapiTokenContent" jdbcType="VARCHAR" />
    <result column="get_time" property="getTime" jdbcType="TIMESTAMP" />
    <result column="expires_in" property="expiresIn" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, jsapi_token_content, get_time, expires_in, updated_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jsapi_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByWhere" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from jsapi_token
  </select>
  
  <delete id="deleteAll" >
    delete from jsapi_token
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jsapi_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.intfocus.hdk.vo.JsapiToken" >
    insert into jsapi_token (id, jsapi_token_content, get_time, 
      expires_in, updated_at)
    values (#{id,jdbcType=INTEGER}, #{jsapiTokenContent,jdbcType=VARCHAR}, #{getTime,jdbcType=TIMESTAMP}, 
      #{expiresIn,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.intfocus.hdk.vo.JsapiToken" >
    insert into jsapi_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jsapiTokenContent != null" >
        jsapi_token_content,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="expiresIn != null" >
        expires_in,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jsapiTokenContent != null" >
        #{jsapiTokenContent,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresIn != null" >
        #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.intfocus.hdk.vo.JsapiToken" >
    update jsapi_token
    <set >
      <if test="jsapiTokenContent != null" >
        jsapi_token_content = #{jsapiTokenContent,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresIn != null" >
        expires_in = #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.intfocus.hdk.vo.JsapiToken" >
    update jsapi_token
    set jsapi_token_content = #{jsapiTokenContent,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      expires_in = #{expiresIn,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>