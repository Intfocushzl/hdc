<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.intfocus.hdk.dao.JsapiTicketMapper">
  <resultMap id="BaseResultMap" type="com.intfocus.hdk.vo.JsapiTicket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="jsapi_ticket_content" jdbcType="VARCHAR" property="jsapiTicketContent" />
    <result column="get_time" jdbcType="TIMESTAMP" property="getTime" />
    <result column="expires_in" jdbcType="INTEGER" property="expiresIn" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, jsapi_ticket_content, get_time, expires_in, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jsapi_ticket
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByWhere" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jsapi_ticket
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jsapi_ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteAll" >
    delete from jsapi_ticket
  </delete>
  
  <insert id="insert" parameterType="com.intfocus.hdk.vo.JsapiTicket">
    insert into jsapi_ticket (id, jsapi_ticket_content, get_time, 
      expires_in, updated_at)
    values (#{id,jdbcType=INTEGER}, #{jsapiTicketContent,jdbcType=VARCHAR}, #{getTime,jdbcType=TIMESTAMP}, 
      #{expiresIn,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.intfocus.hdk.vo.JsapiTicket">
    insert into jsapi_ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jsapiTicketContent != null">
        jsapi_ticket_content,
      </if>
      <if test="getTime != null">
        get_time,
      </if>
      <if test="expiresIn != null">
        expires_in,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jsapiTicketContent != null">
        #{jsapiTicketContent,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null">
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresIn != null">
        #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.intfocus.hdk.vo.JsapiTicket">
    update jsapi_ticket
    <set>
      <if test="jsapiTicketContent != null">
        jsapi_ticket_content = #{jsapiTicketContent,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null">
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresIn != null">
        expires_in = #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.intfocus.hdk.vo.JsapiTicket">
    update jsapi_ticket
    set jsapi_ticket_content = #{jsapiTicketContent,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      expires_in = #{expiresIn,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>